{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/utils/typography.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","a","createElement","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Layout","children","header","__PATH_PREFIX__","react__WEBPACK_IMPORTED_MODULE_1___default","style","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","textDecoration","color","to","marginLeft","marginRight","maxWidth","paddingRight","paddingLeft","paddingTop","height","minHeight","Date","getFullYear","href","Seo","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps"],"mappings":"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","file":"component---src-pages-404-tsx-742fe479ce04d0596de9.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Query } from \"../graphql-types\";\n\ninterface Props {\n  data: Query,\n  location: {\n    pathname: string\n  }\n}\n\nconst NotFoundPage: React.FC <Props> = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\n\nconst typography = new Typography({\n  baseFontSize: '18px',\n  baseLineHeight: 1.666,\n  headerFontFamily: ['Gloria Hallelujah', 'cursive'],\n  bodyFontFamily: ['Roboto', 'sans-serif'],\n  googleFonts: [\n    {\n      name: 'Gloria Hallelujah',\n      styles: [\n        '400'\n      ]\n    },\n    {\n      name: 'Roboto',\n      styles: [\n        '400'\n      ]\n    }\n  ]\n  // See below for the full list of options.\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { ReactNode } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\ninterface Props {\n  location: {\n    pathname: string\n  },\n  title: string,\n  children: ReactNode\n}\n\nconst Layout: React.FC<Props> = ({ location, title, children }) => {\n  const header = location.pathname === `${__PATH_PREFIX__}/` ?\n    (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n    )\n  : (\n      <h3\n        style={{\n          marginTop: 0\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    )\n\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        paddingRight: `${rhythm(3 / 4)}`,\n        paddingLeft: `${rhythm(3 / 4)}`,\n        paddingTop: `${rhythm(1.5)}`,\n        height: '100%'\n      }}\n    >\n      <div style={{\n        minHeight: 'calc(100vh - 90px)'\n      }}>\n        <header>{header}</header>\n        <main>{children}</main>\n      </div>\n      <footer style={{\n        height: '50px'\n      }}>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://github.com/walleXD/walleworld\">React & Typescript</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface Props {\n  description?: string,\n  lang?: string,\n  meta?: [],\n  keywords?: string[],\n  title?: string\n}\n\nconst defaultProps: Props = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nconst Seo: React.FC<Props> = ({ description, lang, meta, keywords, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    >\n    </Helmet>\n  )\n}\n\nSeo.defaultProps = defaultProps\n\nexport default Seo\n"],"sourceRoot":""}