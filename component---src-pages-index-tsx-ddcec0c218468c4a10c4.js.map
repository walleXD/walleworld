{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_bio__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_utils_typography__WEBPACK_IMPORTED_MODULE_5__","BlogIndex","_ref","data","location","site","allMarkdownRemark","siteTitle","siteMetadata","title","posts","edges","a","createElement","keywords","map","_ref2","_ref2$node","node","frontmatter","fields","excerpt","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAqDea,UArCoB,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,SAClCC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,kBACRC,EAAYF,EAAKG,aAAaC,OAAS,GACvCC,EAAQJ,EAAkBK,MAEhC,OACEjB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAAQM,SAAUA,EAAUK,MAAOF,GACjCb,EAAAkB,EAAAC,cAACd,EAAA,EAAD,CAAKU,MAAM,OAAOK,SAAU,yCAC5BpB,EAAAkB,EAAAC,cAAChB,EAAA,EAAD,MACCa,EAAMK,IACL,SAAAC,GAA8D,IAAAC,EAAAD,EAA3DE,KAAQC,EAAmDF,EAAnDE,YAAaC,EAAsCH,EAAtCG,OAAQC,EAA8BJ,EAA9BI,QACxBZ,EAAQU,EAAYV,OAASW,EAAOE,MAAQ,GAClD,OACE5B,EAAAkB,EAAAC,cAAA,cAAYU,IAAKH,EAAOE,MACtB5B,EAAAkB,EAAAC,cAAA,MACEW,MAAO,CACLC,aAAcC,YAAO,OAGvBhC,EAAAkB,EAAAC,cAACjB,EAAA,EAAD,CAAM4B,MAAO,CAAEG,UAAS,QAAYC,GAAIR,EAAOE,MAC5Cb,IAGLf,EAAAkB,EAAAC,cAAA,UAAKM,EAAYU,MACjBnC,EAAAkB,EAAAC,cAAA,KACEiB,wBAAyB,CACvBC,OAAQZ,EAAYa,aAAeX,UAa9C,IAAM7B,EAAS","file":"component---src-pages-index-tsx-ddcec0c218468c4a10c4.js","sourcesContent":["import React, { ReactElement } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport { Query } from \"../graphql-types\"\n\ninterface Props {\n  location: {\n    pathname: string\n  }\n  data: Query\n}\n\nconst BlogIndex: React.FC<Props> = ({ data, location }): ReactElement => {\n  const { site, allMarkdownRemark } = data\n  const siteTitle = site.siteMetadata.title || \"\"\n  const posts = allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <Bio />\n      {posts.map(\n        ({ node: { frontmatter, fields, excerpt } }): ReactElement => {\n          const title = frontmatter.title || fields.slug || \"\"\n          return (\n            <wired-card key={fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <h5>{frontmatter.date}</h5>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: frontmatter.description || excerpt,\n                }}\n              />\n            </wired-card>\n          )\n        }\n      )}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { draft: { eq: false } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}