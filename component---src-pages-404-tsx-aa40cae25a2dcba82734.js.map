{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/utils/typography.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","a","createElement","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Layout","children","header","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","style","Object","assign","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","textDecoration","color","to","marginLeft","marginRight","maxWidth","paddingRight","paddingLeft","paddingTop","height","minHeight","Date","getFullYear","href","Seo","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","rel","sizes","type","defaultProps","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","propTypes","shape"],"mappings":"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","file":"component---src-pages-404-tsx-aa40cae25a2dcba82734.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Query } from \"../graphql-types\"\n\ninterface Props {\n  data: Query\n  location: {\n    pathname: string\n  }\n}\n\nconst NotFoundPage: React.FC<Props> = ({\n  data,\n  location,\n}): React.ReactElement => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\n\nconst typography = new Typography({\n  baseFontSize: \"18px\",\n  baseLineHeight: 1.666,\n  headerFontFamily: [\"Gloria Hallelujah\", \"cursive\"],\n  bodyFontFamily: [\"Roboto\", \"sans-serif\"],\n  googleFonts: [\n    {\n      name: \"Gloria Hallelujah\",\n      styles: [\"400\"],\n    },\n    {\n      name: \"Roboto\",\n      styles: [\"400\"],\n    },\n  ],\n  // See below for the full list of options.\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React, { ReactNode } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\ninterface Props {\n  location: {\n    pathname: string\n  }\n  title: string\n  children: ReactNode\n}\n\nconst Layout: React.FC<Props> = ({\n  location,\n  title,\n  children,\n}): React.ReactElement => {\n  const header =\n    location.pathname === `${__PATH_PREFIX__}/` ? (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n    ) : (\n      <h3\n        style={{\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    )\n\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        paddingRight: `${rhythm(3 / 4)}`,\n        paddingLeft: `${rhythm(3 / 4)}`,\n        paddingTop: `${rhythm(1.5)}`,\n        height: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          minHeight: \"calc(100vh - 90px)\",\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n      </div>\n      <footer\n        style={{\n          height: \"50px\",\n        }}\n      >\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://github.com/walleXD/walleworld\">React & Typescript</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface Props {\n  description?: string\n  lang?: string\n  meta?: []\n  keywords?: string[]\n  title?: string\n}\n\nconst defaultProps: Props = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nconst Seo: React.FC<Props> = ({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n}): React.ReactElement => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    >\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href=\"/apple-touch-icon.png\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"32x32\"\n        href=\"/favicon-32x32.png\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"16x16\"\n        href=\"/favicon-16x16.png\"\n      />\n      <link rel=\"manifest\" href=\"/site.webmanifest\" />\n      <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\" />\n      <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n      <meta name=\"theme-color\" content=\"#ffffff\" />\n    </Helmet>\n  )\n}\n\nSeo.defaultProps = defaultProps\n\nexport default Seo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}